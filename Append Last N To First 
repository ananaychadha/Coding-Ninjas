class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

def lengthll(head):
    temp=head
    count = 0 
    while temp is not None:
        count += 1
        temp = temp.next
    return count     

        
def append_LinkedList(head,n) :
    i = 1
    count = lengthll(head) - n
    if count==0:
        return head
    curr = head
    while i < count and curr is not None:
        curr = curr.next
        i= i + 1
    if curr is None:
        return head
    h2 = curr  
    while(curr.next is not None): 
        curr = curr.next
    curr.next = head 
    head = h2.next
    h2.next = None
    return head

def ll(arr):
    if len(arr)==0:
        return None
    head = Node(arr[0])
    last = head
    for data in arr[1:]:
        last.next = Node(data)
        last = last.next
    return head

def printll(head):
    while head:
        print(head.data, end=' ')
        head = head.next
    print()

# Main
# Read the link list elements including -1
arr=list(int(i) for i in input().strip().split(' '))
# Create a Linked list after removing -1 from list
l = ll(arr[:-1])
i=int(input())
l = append_LinkedList(l, i)
printll(l)
